	// Add for each process an option to change the parameters. Default is the set params
params.nproc = 10 //* @input @description:"How many processes to use for each step. Default 1"
// Process Parameters for params.Filter_Sequence_Quality_filter_seq_quality:
params.Filter_Sequence_Quality_filter_seq_quality.method = "quality"
params.Filter_Sequence_Quality_filter_seq_quality.nproc = params.nproc
params.Filter_Sequence_Quality_filter_seq_quality.q = "20"
// Process Parameters for Mask_Primer_1_MaskPrimers:
params.Mask_Primer_1_MaskPrimers.method = ["score","score"]
params.Mask_Primer_1_MaskPrimers.mode = ["cut","cut"]
params.Mask_Primer_1_MaskPrimers.primer_field = ["PRIMER","PRIMER"]
params.Mask_Primer_1_MaskPrimers.barcode_field = ["BARCODE","BARCODE"]
params.Mask_Primer_1_MaskPrimers.start = [0,0]
params.Mask_Primer_1_MaskPrimers.barcode = ["false","true"]
params.Mask_Primer_1_MaskPrimers.umi_length = [0,17]
params.Mask_Primer_1_MaskPrimers.maxerror = [0.2,0.5]
params.Mask_Primer_1_MaskPrimers.revpr = ["false","false"]
params.Mask_Primer_1_MaskPrimers.failed = "true"
params.Mask_Primer_1_MaskPrimers.nproc = params.nproc
params.Mask_Primer_1_MaskPrimers.R1_primers = "${projectDir}/primers/AbSeq_R1_Human_IG_Primers.fasta"
params.Mask_Primer_1_MaskPrimers.R2_primers = "${projectDir}/primers/AbSeq_R2_TS.fasta"
// Process Parameters for params.Pair_Sequence_pre_consensus_pair_seq:
params.Pair_Sequence_pre_consensus_pair_seq.coord = "sra"
params.Pair_Sequence_pre_consensus_pair_seq.act = "none"
params.Pair_Sequence_pre_consensus_pair_seq.copy_fields_1 = ""
params.Pair_Sequence_pre_consensus_pair_seq.copy_fields_2 = "BARCODE"
params.Pair_Sequence_pre_consensus_pair_seq.nproc = params.nproc
// Process Parameters for params.Build_Consensus_build_consensus:
params.Build_Consensus_build_consensus.failed = "false"
params.Build_Consensus_build_consensus.nproc = params.nproc
params.Build_Consensus_build_consensus.barcode_field = ["BARCODE","BARCODE"]
params.Build_Consensus_build_consensus.primer_field = ["PRIMER","PRIMER"]
params.Build_Consensus_build_consensus.act = ["none","none"]
params.Build_Consensus_build_consensus.mincount = [1,1]
params.Build_Consensus_build_consensus.minqual = [0,0]
params.Build_Consensus_build_consensus.minfreq = [0.6,0.6]
params.Build_Consensus_build_consensus.maxerror = [0.1,0.1]
params.Build_Consensus_build_consensus.prcons = [0.6,"none"]
params.Build_Consensus_build_consensus.maxgap = [0.5,0.5]
params.Build_Consensus_build_consensus.maxdiv = ["none","none"]
params.Build_Consensus_build_consensus.dep = ["false","false"]
// Process Parameters for params.Pair_Sequence_post_consensus_pair_seq:
params.Pair_Sequence_post_consensus_pair_seq.coord = "presto"
params.Pair_Sequence_post_consensus_pair_seq.act = "none"
params.Pair_Sequence_post_consensus_pair_seq.copy_fields_1 = ""
params.Pair_Sequence_post_consensus_pair_seq.copy_fields_2 = ""
params.Pair_Sequence_post_consensus_pair_seq.nproc = params.nproc
// Process Parameters for params.Assemble_pairs_assemble_pairs:
params.Assemble_pairs_assemble_pairs.method = "sequential"
params.Assemble_pairs_assemble_pairs.coord = "presto"
params.Assemble_pairs_assemble_pairs.rc = "tail"
params.Assemble_pairs_assemble_pairs.head_fields_R1 = "CONSCOUNT"
params.Assemble_pairs_assemble_pairs.head_fields_R2 = "CONSCOUNT PRCONS"
params.Assemble_pairs_assemble_pairs.failed = "false"
params.Assemble_pairs_assemble_pairs.fasta = "false"
params.Assemble_pairs_assemble_pairs.nproc = params.nproc
params.Assemble_pairs_assemble_pairs.alpha = 0.00001
params.Assemble_pairs_assemble_pairs.maxerror = 0.3
params.Assemble_pairs_assemble_pairs.minlen = 8
params.Assemble_pairs_assemble_pairs.maxlen = 1000
params.Assemble_pairs_assemble_pairs.scanrev = "true"
params.Assemble_pairs_assemble_pairs.minident = 0.5
params.Assemble_pairs_assemble_pairs.evalue = 0.00001
params.Assemble_pairs_assemble_pairs.maxhits = 100
params.Assemble_pairs_assemble_pairs.fill = "false"
params.Assemble_pairs_assemble_pairs.aligner = "blastn"
params.Assemble_pairs_assemble_pairs.gap = 0
params.Assemble_pairs_assemble_pairs.usearch_version="11.0.667"
params.Assemble_pairs_assemble_pairs.assemble_reference="${projectDir}/reference/IMGT_Human_IG_V.fasta"
// Process Parameters for Mask_Primer_2_MaskPrimers:
params.Mask_Primer_2_MaskPrimers.method = ["align"]
params.Mask_Primer_2_MaskPrimers.mode = ["tag"]
params.Mask_Primer_2_MaskPrimers.maxlen = [100]
params.Mask_Primer_2_MaskPrimers.primer_field = ["CREGION"]
params.Mask_Primer_2_MaskPrimers.barcode = ["false"]
params.Mask_Primer_2_MaskPrimers.maxerror = [0.3]
params.Mask_Primer_2_MaskPrimers.revpr = ["true"]
params.Mask_Primer_2_MaskPrimers.failed = ["true"]
params.Mask_Primer_2_MaskPrimers.nproc = params.nproc
params.Mask_Primer_2_MaskPrimers.skiprc = "true"
params.Mask_Primer_2_MaskPrimers.R1_primers = "${projectDir}/primers/AbSeq_Human_IG_InternalCRegion.fasta"
// Process Parameters for params.Parse_header_collapse_parse_headers:
params.Parse_header_parse_headers.method = "collapse"
params.Parse_header_parse_headers.act = "min"
params.Parse_header_parse_headers.args = "-f CONSCOUNT"
// Process Parameters for params.edit_collapse_seq_params:
params.collapse_sequences_collapse_seq.act = "sum"
params.collapse_sequences_collapse_seq.max_missing = 20
params.collapse_sequences_collapse_seq.inner = "true"
params.collapse_sequences_collapse_seq.uf = "CPRIMER"
params.collapse_sequences_collapse_seq.cf = "CONSCOUNT"
params.collapse_sequences_collapse_seq.nproc = params.nproc
// Process Parameters for params.Parse_header_parse_headers:
params.split_sequences_split_seq.field = "CONSCOUNT"
params.split_sequences_split_seq.num = 2
// Process Parameters for params.Parse_header_table_parse_headers:
params.Parse_header_table_parse_headers.method = "table"
params.Parse_header_table_parse_headers.act = ""
params.Parse_header_table_parse_headers.args = "-f ID CREGION CONSCOUNT DUPCOUNT"




